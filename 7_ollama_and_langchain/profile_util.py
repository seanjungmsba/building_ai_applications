"""
Module: profiling_pipeline

This module provides a workflow to generate synthetic tabular data using a local LLM via LangChain and Ollama,
normalize it into a structured format using Polars, and produce a detailed data profiling report using ydata-profiling.

Main Functions:
- tabular_frame: Converts LLM-generated JSON into a normalized Polars DataFrame.
- generate_profile_report: Creates an HTML data profiling report from the normalized dataset.
"""

from polars import json_normalize, DataFrame
from ydata_profiling import ProfileReport

# Custom Modules
from langchain_prompt_workflow import chain, get_json_data


def tabular_frame(industry: str, num_rows: int) -> DataFrame:
    """
    Generate a normalized tabular Polars DataFrame from a synthetic dataset generated by an LLM.

    Parameters
    ----------
    industry : str
        The industry domain for which synthetic data should be generated (e.g., "Healthcare", "E-commerce").
    
    num_rows : int
        The number of rows (records) to include in the generated dataset.

    Returns
    -------
    DataFrame
        A Polars DataFrame containing the normalized structure of the synthetic data generated by the LLM.
    
    Notes
    -----
    - Internally, this function invokes a LangChain chain with a prompt to generate JSON data.
    - The raw JSON output is parsed and flattened using `polars.json_normalize` for easy downstream analysis.
    """
    json_data = get_json_data(
        chain=chain,
        industry=industry,
        num_rows=num_rows
    )

    df = json_normalize(json_data)

    return df


def generate_profile_report(df: DataFrame, file_output_path: str, explorative: bool = True) -> ProfileReport:
    """
    Generate and save a comprehensive profiling report from a Polars DataFrame.

    Parameters
    ----------
    df : DataFrame
        A Polars DataFrame containing the tabular data to be profiled.
    
    file_output_path : str
        The path (including filename) where the HTML report will be saved (e.g., "report.html").
    
    explorative : bool, optional
        If True, the report will include more in-depth analyses such as correlations and missing value patterns.
        Default is True.

    Returns
    -------
    ProfileReport
        An instance of the profiling report that was generated. Useful if further manipulation is needed.
    
    Notes
    -----
    - The function converts the Polars DataFrame to a Pandas DataFrame since ydata-profiling operates on Pandas.
    - The output file is a self-contained HTML report suitable for EDA and documentation purposes.
    """
    df = df.to_pandas()

    report = ProfileReport(df=df, explorative=explorative)

    report.to_file(output_file=file_output_path)

    return report
